The operation buttons can have data- attributes storing what operation they represent

the first number starts at 0; if it is 0, then pressing any nonzero number will replace it

lets display the first number and the operation while entering the second number

When an operation button is pressed:
 - we record the current number as the first number
 - we record the operation, displaying the first number and the operation
 - let them input a new number

Then when the = button is pressed:
 - we perform the operation, and display the result in the input field
 - this means that this resulting number becomes the first number if we press another operation button
>- what if the = button is pressed when we don't have an operation yet?
>>- it shouldn't do anything, leaving our current first number input the same


But if another operation button is pressed instead:
 - we perform the operation, and set the result as the first number, and let them input a new number
 - this is equivalent to pressing =, then pressing an operation button

------------------------
we'll have 2 main actions
 - executeOperation: execute the operation with the current prevResult and current input, and display the result in the input window
 - prepareOperation: move the current input into prevResult, set the operation, and let the user input the next number

pressing = does:
 - nothing if the current prevResult is empty (i.e., if we haven't had a prepareOperation yet)
 - an executeOperation if the current prevResult is set (and thus we'd also have an operation set)
pressing an operation button does:
 - a prepareOperation if the current prevResult is empty
 - an executeOperation and then a prepareOperation if the current prevResult isn't empty

we'll also have the operation button stay toggled on while it is in action
 - so an executeOperation will detoggle the button toggled on by the prepareOperation
 - so a prepareOperation will toggle the selected button on

we won't store the prev result or the current operation or anything in global variables, we'll just
get them from the page (e.g., to get the current result, find the button that is currently down)

----------------------------------------
actually, after we display a result of a calculation, if the user enters new numbers we want to replace the current
result with the new input (and not append the new input to the current stuff in the input field)
 - so when you have smth in the input field, and you press a button, it seems like there are 2 cases:
 1. the stuff in the input field was the result of a previous calculation, and so you wipe the field and start entering new number
 2. the stuff in the input field is you in the middle of entering a new number

 also if the number gets too big for our calculator to display, we must do smth abt that
  - maybe display TOO BIG?

also, add a visual effect on click, and not just hover  


